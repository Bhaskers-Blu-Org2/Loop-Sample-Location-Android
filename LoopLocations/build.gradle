buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
def mapsApiKey = LOCATIONS_APP_MAPS_KEY_PROP?: "";
def fabricKey = FABRIC_KEY_PROP?: "";

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

android {

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.microsoft.loop.samplelocationsapp"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1005
        versionName "1.0.1"
        multiDexEnabled true

        buildConfigField 'String', 'APP_ID', '\"' + LOCATIONS_APP_ID_PROP + '\"'
        buildConfigField 'String', 'APP_TOKEN', '\"' + LOCATIONS_APP_TOKEN_PROP + '\"'
        buildConfigField 'String', 'LOGGLY_TOKEN', '\"' + LOGGLY_TOKEN + '\"'
        buildConfigField 'String', 'MIXPANEL_TOKEN', '\"' + LOCATIONS_MIXPANEL_TOKEN + '\"'
        manifestPlaceholders = [ mapsApiKey:mapsApiKey, fabricKey:fabricKey]
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    dexOptions {
        dexInProcess = false
        javaMaxHeapSize "2g"
    }
    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet false
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
        // project specific lint options
        lintConfig new File(rootProject.projectDir, "lint.xml")
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", ".apk"))
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.google.android.gms:play-services-maps:9.4.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile('ms.loop:loopsdk:2.1.0') { changing = true }
    compile 'com.android.support:design:23.4.0'
    compile 'com.mixpanel.android:mixpanel-android:4.+'
    compile 'com.google.android.gms:play-services:9.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
}
